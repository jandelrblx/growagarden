-- Discord Webhook Notification Script for Roblox
-- This script will notify you on Discord when someone executes it

local webhookUrl = "https://discord.com/api/webhooks/1383027956993097813/ZNOTQj9QkIWapKn87a00YPX8G0dqlBBWJj3tGq1zI1yTLtGdZF-Dh2lM6p-NeVPMkU5g"

-- Function to send Discord webhook with better error handling
local function sendDiscordNotification()
    local player = game.Players.LocalPlayer
    local playerName = player.Name
    local playerDisplayName = player.DisplayName
    local playerUserId = player.UserId
    local playerAccountAge = player.AccountAge
    local gameName = game.Name
    local placeId = game.PlaceId
    local jobId = game.JobId
    local serverTime = os.date("%Y-%m-%d %H:%M:%S")
    
    print("üîç Debug: Starting Discord notification process...")
    print("üîç Debug: Player Name:", playerName)
    print("üîç Debug: Game Name:", gameName)
    
    -- Create a simpler message first to test
    local simpleMessage = {
        content = "üö® **SCRIPT EXECUTION ALERT** üö®\n\n" ..
                  "**Player:** " .. playerName .. "\n" ..
                  "**Game:** " .. gameName .. "\n" ..
                  "**Time:** " .. serverTime .. "\n" ..
                  "**User ID:** " .. playerUserId .. "\n" ..
                  "**Account Age:** " .. playerAccountAge .. " days"
    }
    
    -- Try simple message first
    print("üîç Debug: Attempting to send simple message...")
    local success1, response1 = pcall(function()
        local httpService = game:GetService("HttpService")
        local jsonMessage = httpService:JSONEncode(simpleMessage)
        print("üîç Debug: JSON Message:", jsonMessage)
        return httpService:PostAsync(webhookUrl, jsonMessage)
    end)
    
    if success1 then
        print("‚úÖ Simple Discord notification sent successfully!")
        print("üîç Debug: Response:", response1)
    else
        print("‚ùå Simple message failed:", response1)
        
        -- Try with headers
        print("üîç Debug: Trying with headers...")
        local success2, response2 = pcall(function()
            local httpService = game:GetService("HttpService")
            local jsonMessage = httpService:JSONEncode(simpleMessage)
            
            -- Create request with headers
            local request = {
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = jsonMessage
            }
            
            return httpService:RequestAsync(request)
        end)
        
        if success2 then
            print("‚úÖ Discord notification with headers sent successfully!")
            print("üîç Debug: Response:", response2)
        else
            print("‚ùå Headers method failed:", response2)
            
            -- Try alternative webhook format
            print("üîç Debug: Trying alternative webhook format...")
            local alternativeMessage = {
                username = "Roblox Script Monitor",
                content = "üö® SCRIPT EXECUTED!\nPlayer: " .. playerName .. "\nGame: " .. gameName .. "\nTime: " .. serverTime
            }
            
            local success3, response3 = pcall(function()
                local httpService = game:GetService("HttpService")
                local jsonMessage = httpService:JSONEncode(alternativeMessage)
                return httpService:PostAsync(webhookUrl, jsonMessage)
            end)
            
            if success3 then
                print("‚úÖ Alternative format sent successfully!")
            else
                print("‚ùå All methods failed. Last error:", response3)
                print("üîç Debug: Check if webhook URL is valid and has proper permissions")
            end
        end
    end
end

-- Function to test webhook connectivity
local function testWebhook()
    print("üîç Debug: Testing webhook connectivity...")
    
    local testMessage = {
        content = "üß™ **WEBHOOK TEST** üß™\nThis is a test message to verify webhook functionality."
    }
    
    local success, response = pcall(function()
        local httpService = game:GetService("HttpService")
        local jsonMessage = httpService:JSONEncode(testMessage)
        return httpService:PostAsync(webhookUrl, jsonMessage)
    end)
    
    if success then
        print("‚úÖ Webhook test successful!")
        print("üîç Debug: Test response:", response)
    else
        print("‚ùå Webhook test failed:", response)
        print("üîç Debug: Possible issues:")
        print("   - Webhook URL is invalid")
        print("   - Webhook has been deleted")
        print("   - Discord server is down")
        print("   - Network connectivity issues")
    end
end

-- Execute the test first
testWebhook()

-- Wait a moment then send the main notification
wait(1)
sendDiscordNotification()

-- Optional: Add a visual confirmation in the game
local player = game.Players.LocalPlayer
if player then
    -- Create a simple GUI notification
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player.PlayerGui
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 100)
    frame.Position = UDim2.new(0.5, -150, 0.8, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "Script executed!\nCheck console for Discord status."
    textLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = frame
    
    -- Remove the GUI after 5 seconds
    game:GetService("Debris"):AddItem(screenGui, 5)
end

print("üéØ Script execution completed! Check the console output above for Discord status.")
